$dot-imported-functions-string: true !default;

@function starts-with($string, $substring) {
  @if (is-string($string)) {
    @return str-index($string, $substring) == 1;
  }
  @return false;
}

@function ends-width($string, $substring) {
  $length: str-length($string);
  @return str-slice($string, $length - str-length($substring) + 1, $length) == $substring;
}

/// get character by index from string
/// @param {string} $string
/// @param {number} $index the string index
@function char-at($string, $index) {
  @if ($index < 1) {
    @warn __type-min(1);
  }
  @return str-slice($string, $index, $index);
}

/// string unit to number unit
/// @param {string} $value the has a unit
/// @param {string} $unit the css unit
@function to-length($value, $unit) {
  @if not index($__units, $unit) {
    @warn 'Invalid unit `#{$unit}`.';
  }

  @return $value * map-get($__units, $unit);
}

/// string to number
/// @param {string | value} $value
/// @param {boolean} $remove-unit the return without unit
@function to-number($value, $remove-unit: false) {
  @if is-number($value) {
    @return $value;
  } @else if not is-string($value) {
    @warn __type-numeric();
  }

  $result: 0;
  $digits: 0;
  $minus: char-at($value, 1) == '-';
  @for $i from if($minus, 2, 1) through str-length($value) {
    $char: char-at($value, $i);
    $is-float: $char == '.';
    @if not (__number-index($char) or $is-float) {
      $result: if($minus, -$result, $result);
      @return if($remove-unit, $result, to-length($result, str-slice($value, $i)));
    }
    @if $is-float {
      $digits: 1;
    } @else {
      @if $digits == 0 {
        $result: $result * 10 + __number($char);
      } @else {
        $digits: $digits * 10;
        $result: $result + __number($char) / $digits;
      }
    }
  }

  @return if($minus, -$result, $result);
}

/// Replace `$search` with `$replace` in `$string`
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $string: inspect($string);
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function str-split($string, $separator) {
  $result: ();

  $index: str-index($string, $separator);

  @while $index != null {
    $result: append($result, str-slice($string, 1, $index - 1));
    $string: str-slice($string, $index + 1);
    $index: str-index($string, $separator);
  }

  $result: append($result, $string);

  @return $result;
}

@function str-repeat($string, $repeat) {
  @if $repeat < 1 {
    @return '';
  }

  $result: $string;
  @for $index from 2 through $repeat {
    $result: $result + $string;
  }
  @return $string;
}


@mixin grid-rule-by-flex($options) {
  $selector: map-get($options, 'selector');
  $selector-string: map-get($options, 'selector-string');
  $attr-query: #{'[class*='+$selector-string+'-]'};
  $x-attr-query: #{'[class~='+$selector-string+'-x]'};


  @at-root {
    @each $layout-width in $DOT-LAYOUT-WIDTHS {

      @include mq-min($layout-width) {


        //////////////////////////////
        // grid gap suffix
        //////////////////////////////

        $gap: 0;
        @while ($gap <= $DOT-GRID-GAP-TO) {

          $gap-query: get-grid-gap-suffix($gap, $layout-width);

          $margin: px(($gap / 2));

          // gap*[class*=dot-grid]
          // gap* [class*=dot-grid]
          // gap*[class~=dot-grid-x]
          // gap* [class~=dot-grid-x]
          #{$gap-query} {
            &#{$attr-query},
            &#{' ' + $attr-query},
            &#{$x-attr-query},
            &#{' ' + $x-attr-query} {
              @include grid-gap-child-rule($margin);
            }
          }

          $gap: $gap + $DOT-GRID-GAP-INCREASE;
        }

        //////////////////////////////
        // grid *
        //////////////////////////////

        #{$selector} {
          @at-root {
            %grid-area#{$layout-width} {
              display: flex;
              flex-wrap: wrap;
            }
          }


          @for $column from 1 through $DOT-GRID-COLUMN-TO {
            // *-at**
            $grid-query: __add-width-selector-suffix($column, $layout-width);

            $width: #{(100 / $column) + '%'};

            &#{$grid-query} {
              @extend %grid-area#{$layout-width};

              > *,
              > #{$selector} {
                flex-grow: 0;
                flex-shrink: 0;
                flex-basis: auto;
                width: $width;
              }
            }
          }

          //////////////////////////////
          // grid-x
          //////////////////////////////
          $x-query: __add-width-selector-suffix('x', $layout-width);

          &#{$x-query} {
            display: flex;
            flex-wrap: nowrap;

            > *,
            > #{$selector} {
              flex-grow: 1;
            }
          }
        }
      }
    }
  }
}


@mixin grid-rule-by-grid($options) {
  $selector: map-get($options, 'selector');
  $selector-string: map-get($options, 'selector-string');
  $attr-query: #{'[class*='+$selector-string+'-]'};

  $x-attr-query: #{'[class~='+$selector-string+'x]'};

  @at-root {

    @each $layout-width in $DOT-LAYOUT-WIDTHS {
      @include mq-min($layout-width) {



        //////////////////////////////
        // grid gap suffix
        //////////////////////////////

        $gap: 0;
        @while ($gap <= $DOT-GRID-GAP-TO) {
          $gap-query: get-grid-gap-suffix($gap, $layout-width);

          $margin: px($gap / 2);

          #{$gap-query} {
            // gap*[class*=dot-grid]
            // gap* [class*=dot-grid]
            &#{$attr-query},
            &#{' ' + $attr-query} {
              grid-column-gap: px($gap);
              grid-row-gap: px($gap);
            }

            // gap*[class~=dot-gridx]
            // gap* [class~=dot-gridx]
            &#{$x-attr-query},
            &#{' ' + $x-attr-query} {
              @include grid-gap-child-rule($margin);
            }
          }
          $gap: $gap + $DOT-GRID-GAP-INCREASE;
        }

        //////////////////////////////
        // grid *
        //////////////////////////////
        #{$selector}{
          @at-root {
            %grid-area#{$layout-width} {
              display: grid;
            }
          }

          @for $column from 1 through $DOT-GRID-COLUMN-TO {
            // *-at**
            $grid-query: __add-width-selector-suffix($column, $layout-width);


            &#{$grid-query} {
              @extend %grid-area#{$layout-width};
              grid-template-columns: repeat($column, 1fr);

            }
          }

          //////////////////////////////
          // grid-x
          //////////////////////////////
          $x-query: __add-width-selector-suffix('x', $layout-width);
          &#{$x-query} {
            display: flex;
            flex-wrap: nowrap;

            > *,
            > #{$selector} {
              flex-grow: 1;
            }
          }
        }
      }
    }
  }
}
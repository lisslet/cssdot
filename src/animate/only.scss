@import './variables';

/// todo: make global
@mixin properties($map) {
  @each $property, $value in $map {
    #{$property}: $value;
  }
}

/// todo: make global
@function map-assign($map1, $map2) {
  @each $key, $value in $map2 {
    @if map-has-key($map1, $key) {
      $origin: map-get-if($map1, $key);
      @if $origin {
        @if is-map($origin) {
          $map1: map-set($map1, map-assign($origin, $value));
        } @else if is-list($origin) {
          $map1: map-set($map1, $key, append($origin, $value));
        } @else {
          $origin: append($origin, $value);
          $map1: map-set($map1, $key, $origin);
        }
      } @else {
        $map1: map-set($map1, $key, $value);
      }
    } @else {
      $map1: map-set($map1, $key, $value);
    }
  }
  @return $map1;
}

$DOT-ANIMATE-DELAYS: (
  0.05s,
  0.1s,
  0.2s,
  0.4s
  0.6s
);

@mixin landing-delay-rule($options) {
  $options: dot-rule-initiate($options, null, 'delay');
  $selector: map-get($options, 'selector');
  $delay: map-get-if($options, 'delay', 0.05s);
  $size: map-get-if($options, 'size', 36);
  @at-root #{$selector} {
    > * {
      @include animate-delays($delay, $size);
    }
  }
}

/// animation and keyframes preset rule
@mixin animate-rule($frame-groups: $DOT-ANIMATE-FRAMES) {
  $mixed-frames: ();

  $frame-index: 0;
  @each $frame-group in $frame-groups {
    $pre-frames: $mixed-frames;
    @each $key, $properties in $frame-group {
      @if $frame-index > 0 {
        @each $pre-key, $pre-properties in $pre-frames {
          $mix-key: $pre-key + '-' + $key;
          $mix-properties: map-assign($pre-properties, $properties);
          $mixed-frames: map-set($mixed-frames, $mix-key, $mix-properties);
        }
      }
      $mixed-frames: map-set($mixed-frames, $key, $properties);
    }
    $frame-index: $frame-index + 1;
  }

  @each $key, $properties in $mixed-frames {
    $from-name: '--dot-' + $key;
    $to-name: 'dot-' + $key + '--';

    #{'.'+$from-name} {
      &,
      &-child > *:nth-child(1n) {
        animation: unquote($from-name) 0.3s both;
      }
    }

    @include frames($from-name) {
      from {
        @include properties($properties);
      }
    }

    //#{'.'+$to-name} {
    //  &,
    //  &child > * {
    //    animation: unquote($to-name) 0.3s both;
    //  }
    //
    //  &child {
    //    @extend %delays;
    //  }
    //}
    //
    //@include frames($to-name) {
    //  to {
    //    @include properties($properties);
    //  }
    //}
  }

  .dot-delay > * {
    @include animate-delays(0.025s, 48);
  }
}

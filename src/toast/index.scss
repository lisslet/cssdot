@import '../scss';

$VERTICAL-POSITIONS: (
        'top': (
                top: 0,
        ),
        'middle': (
                top:50%,
                transform:translateY(-50%)
        ),
        'bottom': (
                bottom:0,
        )
);

$HORIZONTAL-POSITIONS: (
        'left': (
                left: 0,
        ),
        'center': (
                left:50%,
                transform:translateX(-50%)
        ),
        'right': (
                right:0
        )
);

$TOAST-QUERY: '.dot-toast';
$TOAST-COLORS: ('primary', 'secondary', 'accent', 'warn');
$TOAST-SHAPES: ('soft', 'hard', 'vivid', 'border');
$TOAST-MIN-WIDTH: 300px;
$TOAST-MAX-WIDTH: 480px;

@mixin toast-rule() {
  .dot-toast {

    @each $vertical-type, $vertical-properties in $VERTICAL-POSITIONS {
      $origin-y: unquote(if($vertical-type == 'middle', 'center', $vertical-type));
      @each $horizontal-type, $horizontal-properties in $HORIZONTAL-POSITIONS {
        $state: $vertical-type + '-' + $horizontal-type;

        &#{'_'+$state} &-pool,
        &-pool.dot-toast_#{$state} {
          @include properties($vertical-properties, $horizontal-properties);
          transform-origin: unquote($horizontal-type) $origin-y;
        }
      }
    }


    &-pool {
      position: fixed;
      max-width: $TOAST-MAX-WIDTH;
      z-index: 10000;
    }

    @include float;

    margin: 0.625em auto 0 auto;
    width: auto;
    min-width: $TOAST-MIN-WIDTH;
    background-color: #fff;

    .dot-pad {
      padding: 0.625em 1.25em;
      display: flex;
    }

    p,
    button {
      line-height: 1.6em;
    }


    p {
      float: left;
      line-height: 1.6em;
      flex-grow: 1;
    }

    .buttons {
      text-align: right;
      margin-left: 0.625em;
    }

    button {
      vertical-align: middle;
      background-color: transparent;
      border: none;
      font-weight: bold;
      padding: 0 0.313em;

      &:focus {
        outline: none;
      }
    }
  }
}

@include toast-rule;

@mixin toast-soft-theming($theme) {
  $text: -text($theme);
  $field: -field($theme);

  #{$TOAST-QUERY} {

    background-color: light-tint-shade($theme, $field, 36%);
    color: $text;

    button {
      &:focus,
      &:hover {
        color: light-dark-light($theme, $text, 10%);
      }
    }

    @each $label in $TOAST-COLORS {
      $color: pick($theme, $label);
      $label-query: #{'._'+$label};

      &#{$label-query} {
        background-color: light-tint-shade($theme, $color, 92%);
        color: $color; // light-shade-tint($theme, $color, 2%);

        &:hover {
          background-color: light-tint-shade($theme, $color, 86%);
        }

        button {
          color: $color;

          &:hover {
            color: light-dark-light($theme, $color, 10%);
          }
        }
      }
    }
  }
}

@mixin toast-hard-theming($theme) {
  #{$TOAST-QUERY} {
    @each $label in $TOAST-COLORS {
      $color: pick($theme, $label);
      $label-query: #{'._'+$label};

      &#{$label-query} {
        background-color: $color;
        color: safe-color($color);

        //.dot-pad {
        //  background: linear-gradient(to bottom, rgba(#fff, 0.6), transparent 2px),
        //  linear-gradient(to bottom, rgba(#fff, 0.12), transparent);
        //}
      }
    }
  }

}

@mixin hover($color) {
  background-color: $color;
  color: safe-color($color);
}

@mixin toast-border-theming($theme) {
  $field: -field($theme);
  $text: -text($theme);

  $normal-border: $text;
  $normal-field: light-tint-shade($theme, $field, 90%);
  $normal-text: safe-color($normal-field);


  #{$TOAST-QUERY} {
    border-style: solid;
    border-width: 2px;
    border-color: $normal-border;
    background-color: $normal-field;
    color: $normal-text;

    &:hover {
      @include hover($normal-border);
    }

    button {
      border-style: solid;
      border-width: 2px 0;
      border-color: transparent;

      &:hover {
        border-bottom-color: $field;
      }
    }

    @each $label in $TOAST-COLORS {
      $color: pick($theme, $label);
      $label-query: #{'._'+$label};

      &#{$label-query} {
        border-color: $color;

        &:hover {
          @include hover($color);

          button {
            color: inherit;
          }
        }

        button {
          color: $color;

          &:hover {
            border-bottom-color: safe-color($color);
          }
        }
      }
    }
  }
}

@mixin toast-vivid-theming($theme) {
  #{$TOAST-QUERY} {
    @each $label in $TOAST-COLORS {
      $color: pick($theme, $label);
      $label-query: #{'._'+$label};

      &#{$label-query} {
        background: linear-gradient(to left, adjust-hue($color, -79deg), $color);
        color: safe-color($color);
      }
    }
  }

}

@mixin toast-theming($theme) {
  #{$TOAST-QUERY} {
    &_soft {
      @include toast-soft-theming($theme);
    }

    &_hard {
      @include toast-hard-theming($theme);
    }

    &_vivid {
      @include toast-vivid-theming($theme);
    }

    &_border {
      @include toast-border-theming($theme);
    }
  }
}

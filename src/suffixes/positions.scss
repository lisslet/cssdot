$DOT-FIXED-POSITIONS: (
        'left-top': (
                'left': 0,
                'top':0
        ),
        'left-middle': (
                'left': 0,
                'top': 50%,
                'transform': 'translateY(-50%)'
        ),
        'left-bottom': (
                'left': 0,
                'bottom': 0,
        ),
        'center-top': (
                'left': 50%,
                'top':0,
                'transform': 'translateX(-50%)'
        ),
        'center-middle': (
                'left': 50%,
                'top': 50%,
                'transform': 'translate(-50%, -50%)'
        ),
        'center-bottom': (
                'left': 50%,
                'bottom': 0,
                'transform': 'translateX(-50%)'
        ),
        'right-top': (
                'right': 0,
                'top':0
        ),
        'right-middle': (
                'right': 0,
                'top': 50%,
                'transform': 'translateY(-50%)'
        ),
        'right-bottom': (
                'right': 0,
                'bottom': 0,
        ),
);

/// position suffix
/// @param string $default-position the same effect without suffix
@mixin _position-rule($default-position: '') {
        @if ($default-position != '') {
                @if (map-has-not-key($DOT-FIXED-POSITIONS, $default-position)) {
                        @warn #{$default-position +' is not position'};
                } @else {

                }
        }

        @each $position, $properties in $DOT-FIXED-POSITIONS {
                $query: #{'_'+$position};
                @if ($position == $default-position) {
                        &,
                        &#{$query} {
                                position: fixed;
                                @include properties($properties);
                        }
                } @else {
                        &#{$query} {
                                position: fixed;
                                @include properties($properties);
                        }
                }
        }
}
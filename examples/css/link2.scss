@import '../../src/scss';

/// Get style map that initializes properties used in other styles.
@function get-initialize-styles($styles) {
  $initialize-styles: ();
  @each $style, $properties in $styles {
    $initialize-style: ();

    @each $other-style, $other-properties in $styles {
      @each $property, $value in $other-properties {
        @if not has-key($properties, $property) {
          @if not has-key($initialize-style, $property) {
            $initialize-style: map-set($initialize-style, $property, 'inherit');
          }
        }
      }
    }
    $initialize-styles: map-set($initialize-styles, $style, $initialize-style);
  }
  @return $initialize-styles;
}

@function style-filter($color, $filter, $amount: null) {
  @return $color;
}

// $color, opacity, +-100%;
// $color, bright, +-100%;
// $color, mixin, +-100%;
// $color, invert

@debug style-filter('#fff', 96%);


@function style-value($color, $value) {

  $color-ref: $value;
  $color-filter: null;

  @if is-list($value) {
    $color-ref: nth($value, 1);
    $color-filter: nth($value, 2);
  }

  @if ($value == 'color') {
    @return $color;
  }
  @if ($value == 'text') {
    @return safe-color($color);
  }
  @return $value;
}


$primary: #1E88E5;
$accent: #00ACC1;
$warn: #E53935;

$palette: palette((
        'primary': $primary,
        'accent': $accent,
        'warn': $warn
));

$theme: theme($palette);

// link styles
// 'transparent,
// 'fill',
// 'ghost,

$DOT-THEME-OPACITY: 11 30 72 86;

$DOT-LINK-DEFAULT-LABEL: 'text' !default;
$DOT-LINK-DEFAULT-STYLE: 'lite' !default;

$DOT-LINK-PROPERTIES: (
        'border': (
                border-style: solid,
                border-width: 2px
        ),
        'line': (
                border-style: solid,
                border-width: 0 0 2px 0
        )
);

$DOT-LINK-STYLES: (
        'lite': (
                color: 'color'
        ),
        'fill':(
                background-color: 'color',
                color: 'text'
        ),
        'border':(
                border-color: 'color',
                color: 'color'
        ),
        'line': (
                border-color: 'color',
                color: 'color',
                border-bottom-left-radius: 0,
                border-bottom-right-radius: 0
        )
) !default;

$DOT-LINK-STYLES2: (
        'clean': (
                'base': (
                        color: 'color',
                ),
                'react': (
                        color: ('color', 'bright')
                )
        ),
        'fill': (
                'base': (
                        background-color: 'color',
                        color: 'text'
                ),
                'react': (
                        background-color: ('color', 'bright'),
                        color: 'text'
                )
        ),
        'border': (
                'base': (
                        border-color: 'color',
                        color: 'color'
                ),
                'react': (
                        border-color:  ('color', 'bright'),
                        color: 'color'
                )
        ),
        'line': (
                'base': (
                        border-color: 'color',
                        color: 'color',
                        border-bottom-left-radius: 0,
                        border-bottom-right-radius: 0
                ),
                'react': (
                        border-color:  ('color', 'bright'),
                        color: 'color'
                )
        ),
);

$DOT-LINK-INITIALIZE-STYLES: get-initialize-styles($DOT-LINK-STYLES) !default;


$labels: ('text', 'primary', 'accent', 'warn');

$selector: #{'.dot-link'};


$min-height: 36px;

@mixin link-core() {
  // a
  display: inline-block;
  // button
  border: none;
  margin: 0;
  padding: 0;
  background-color: transparent;

  // common
  // font-family:sans-serif;
  font-size: 1rem;
  cursor: pointer;
  // vertical-align: middle;
  box-sizing: border-box;
  border-radius: 3px;
  text-transform: uppercase;
  line-height: $min-height;

  > span,
  &-area {
    display: inline-block;
    min-width: 48px;

    text-align: center;
    padding: 0 0.313em;
  }

  &:focus {
    outline: none;
  }

  @each $style, $properties in $DOT-LINK-PROPERTIES {
    $style-query: if($style == $DOT-LINK-DEFAULT-STYLE, '', '._' + $style);
    &#{$style-query} {
      @include properties($properties);
    }
  }
}


#{$selector} {
  @include link-core();


  @each $type, $map in $DOT-LINK-STYLES {
    $type-query: if($type == $DOT-LINK-DEFAULT-STYLE, '', '._' + $type);
    &#{$type-query} {
      @each $label in $labels {

        $color: pick($theme, $label);

        &#{'._' + $label} {
          @each $property, $value in $map {
            $value: style-value($color, $value);
            #{$property}: $value;
          }
        }
      }
    }
  }
}
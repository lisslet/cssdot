@import '../../src/scss';

$VERTICAL-POSITIONS: (
        'top': (
                top: 0,
        ),
        'middle': (
                top:50%,
                transform:translateY(-50%)
        ),
        'bottom': (
                bottom:0,
        )
);

$HORIZONTAL-POSITIONS: (
        'left': (
                left: 0,
        ),
        'center': (
                left:50%,
                transform:translateX(-50%)
        ),
        'right': (
                right:0
        )
);

$TOAST-SHAPES: ('soft', 'hard', 'vivid', 'border');


@mixin toast-rule() {
  .dot-toast {


    // @include fixed-position-states('.dot-toast-pool');

    @each $vertical-type, $vertical-properties in $VERTICAL-POSITIONS {
      @each $horizontal-type, $horizontal-properties in $HORIZONTAL-POSITIONS {
        $state: $vertical-type + '-' + $horizontal-type;

        &#{'_'+$state} &-pool,
        &-pool.dot-toast_#{$state} {
          @include properties($vertical-properties, $horizontal-properties);
        }
      }
    }


    &-pool {
      position: fixed;
      max-width: 520px;
      z-index: 10000;
    }

    @include float;
    margin: 1.25em auto 0 auto;
    width: auto;
    min-width: 320px;
    background-color: #fff;

    .dot-pad {
      padding: 1.25em;

      display: flex;
    }

    p,
    button {
      line-height: 1.6em;
    }


    p {
      float: left;
      line-height: 1.6em;
      flex-grow: 1;
    }

    .buttons {
      text-align: right;
    }


    button {
      vertical-align: middle;
      background-color: transparent;
      border: none;
      font-weight: bold;
      padding: 0 0.313em;
      &:focus {
        outline: none;
      }
    }
  }
}

@include toast-rule;

@function light-light-dark($theme, $color, $amount) {
  @if is-light-theme($theme) {
    @return lighten($color, $amount);
  }
  @return darken($color, $amount);
}

@function light-dark-light($theme, $color, $amount) {
  @if is-dark-theme($theme) {
    @return lighten($color, $amount);
  }
  @return darken($color, $amount);
}

@function light-shade-tint($theme, $color, $amount) {
  @if is-light-theme($theme) {
    @return shade($color, $amount);
  }
  @return tint($color, $amount);
}

@function light-tint-shade($theme, $color, $amount) {
  @if is-dark-theme($theme) {
    @return shade($color, $amount);
  }
  @return tint($color, $amount);
}

@mixin toast-soft-theming($theme) {
  $labels: primary accent warn;

  $text: -text($theme);
  $field: -field($theme);

  .dot-toast {

    background-color: light-tint-shade($theme, $field, 36%);
    color: $text;

    button {
      &:focus,
      &:hover {
        color: light-dark-light($theme, $text, 10%);
      }
    }

    @each $label in $labels {
      $color: pick($theme, $label);
      $label-suffix-query: #{'._'+$label};

      &#{$label-suffix-query} {


        background-color: light-tint-shade($theme, $color, 92%);
        color: $color; // light-shade-tint($theme, $color, 2%);

        &:hover {
          background-color: light-tint-shade($theme, $color, 86%);
        }

        button {
          color: $color;
          &:hover {
            color: light-dark-light($theme, $color, 10%);
          }
        }
      }
    }

  }
}

@mixin toast-hard-theming($theme) {
  $labels: primary accent warn;

  .dot-toast {
    @each $label in $labels {
      $color: pick($theme, $label);
      $label-suffix-query: #{'._'+$label};

      &#{$label-suffix-query} {
        background-color: $color;
        color: safe-color($color);
      }
    }
  }

}



@mixin toast-border-theming($theme) {
  $field: -field($theme);
  $text: -text($theme);
  $labels: primary accent warn;

  $normal-border: $text;
  $normal-field: light-tint-shade($theme, $field, 90%);
  $normal-text: safe-color($normal-field);
  .dot-toast {
    border-style: solid;
    border-width: 2px;
    border-color: $normal-border;
    background-color: $normal-field;
    color: $normal-text;

    @each $label in $labels {
      $color: pick($theme, $label);
      $label-suffix-query: #{'._'+$label};

      &#{$label-suffix-query} {
        border-color: $color;
        // background-color: light-tint-shade($theme, $color, 79%);
        // color: light-light-dark($theme, $color, 20%);

        button {
          color: $color;
        }
      }
    }
  }
}

@mixin toast-vivid-theming($theme) {
  $labels: primary accent warn;

  .dot-toast {
    @each $label in $labels {
      $color: pick($theme, $label);
      $label-suffix-query: #{'._'+$label};

      &#{$label-suffix-query} {
        background: linear-gradient(to left, $color, adjust-hue($color, 67deg));
        color: safe-color($color);
      }
    }
  }

}

@mixin toast-theming($theme) {

  .dot-toast_soft {
    @include toast-soft-theming($theme);
  }
  .dot-toast_hard {
    @include toast-hard-theming($theme);
  }
  .dot-toast_vivid {
    @include toast-vivid-theming($theme);
  }
  .dot-toast_border {
    @include toast-border-theming($theme);
  }

}

$primary: #9A0D3A;
$accent: lighten($primary, 20%);
$warn: #b57fff;
$field: #fff;
$text: safe-color($field);

$theme: theme((
        'palette': palette((
                'primary': $primary,
                'accent': $accent,
                'warn': $warn,
                'field': $field,
                'text': $text
        ))
));

@include toast-theming($theme);

body {
  background-color: $field;
}

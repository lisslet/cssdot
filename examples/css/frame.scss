// @import '../../src/frame/index';

@import '../../src/scss';
@import '../../src/scss/variables';

@mixin frames {
  #dot-head-area,
  #dot-main-area,
  #dot-foot-area,
  .dot-area {
    @content;
  }
}


@mixin frame-rule($options: null) {

  $sticky-resize: map-get-if($options, 'sticky-resize');
  $width-query-prefix: '._width-';

  $min-width: 320;
  $width-map: $DOT-LAYOUT-WIDTH-MAP;
  $width-keys: $DOT-LAYOUT-WIDTH-KEYS;


  #dot-head-area,
  #dot-main-area,
  #dot-foot-area {
    position: relative;
  }

  @include frames {
    width: 100%;
    min-width: px($min-width);
    margin: 0 auto;
    transition-property: width;
    transition-duration: 0.24s;

    &._resize {
      width: 100%;
    }
  }





  $start-index: 1;
  $length: length($width-keys);

  @each $alias, $width in $width-map {
    @if $width > $min-width {

      // get upper width then target
      //   1200 => 1400, 1600, 1800
      $upper-widths: list-slice($width-keys, $start-index, $length);

      // get lower width then target
      //   1200 => 1000, 768, 640
      $lower-widths: list-slice($width-keys, 1, $start-index);
      $start-index: $start-index + 1;


      @include mq-min($width) {

        %frame-rule-width-#{$width} {
          width: px($width);
        }

        @each $child-width-key in $lower-widths {
          %frame-rule-width-#{$width}-#{$child-width-key} {
            width: px(map-get($width-map, $child-width-key));
          }
        }

        @each $width-key in $upper-widths {
          $width-query: $width-query-prefix + $width-key;

          // set width for default dot element
          @include frames {
            #{$width-query} &,
            &#{$width-query} {
              @extend %frame-rule-width-#{$width};
            }
          }

          // set width for suffixes
          #{$width-query} {
            @extend %frame-rule-width-#{$width};

            // set width for lower suffixes as child
            @each $lower-width-key in $lower-widths {
              @if $width-key != $lower-width-key {
                #{$width-query-prefix + $lower-width-key} {
                  @extend %frame-rule-width-#{$width}-#{$lower-width-key};
                }
              }
            }
          }
        }

      }

    }


  }

}


@include frame-rule();

